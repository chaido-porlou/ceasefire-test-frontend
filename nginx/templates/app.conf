# HTTP Configuration for Let's Encrypt Challenges
server {
    listen 80;
    server_name cyberpatrol-pilots.ceasefire-project.eu www.cyberpatrol-pilots.ceasefire-project.eu;
    
    # Serve ACME challenge files
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;  # Must match Certbot's webroot path
        try_files $uri =404;     # Ensure 404 if file not found
        allow all;               # Allow public access
    }

    # Block all other HTTP traffic (no redirect)
    location / {
        return 444;  # Close connection
    }
}

# HTTPS Configuration (unchanged)
server {
    listen 443 ssl; 
    http2 on;
    server_name cyberpatrol-pilots.ceasefire-project.eu www.cyberpatrol-pilots.ceasefire-project.eu;
    
    # SSL Certificates (ensure paths match your setup)
    ssl_certificate /etc/letsencrypt/live/cyberpatrol-pilots.ceasefire-project.eu/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/cyberpatrol-pilots.ceasefire-project.eu/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Security headers (unchanged)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header Content-Security-Policy "default-src 'self'";
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;

    # Application configuration (unchanged)
    client_max_body_size 10M;

    location / {
        index index.html;
        root /var/www/html;
        try_files $uri $uri/ /index.html;
    }

    location /api {
        proxy_pass http://backend-alerts:14100;
        proxy_set_header    Host                $http_host;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto   $scheme;
    }

    location ~ /\.(?!well-known) {
        deny all;
    }
}